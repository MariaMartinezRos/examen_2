openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/documentation:
    get:
      summary: 'Display Swagger API page.'
      operationId: displaySwaggerAPIPage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>API IES Documentation</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"http://localhost/docs/asset/swagger-ui.css?v=0755b7093afdd36d03212b65315f0209\">\n    <link rel=\"icon\" type=\"image/png\" href=\"http://localhost/docs/asset/favicon-32x32.png?v=40d4f2c38d1cd854ad463f16373cbcb6\" sizes=\"32x32\"/>\n    <link rel=\"icon\" type=\"image/png\" href=\"http://localhost/docs/asset/favicon-16x16.png?v=f0ae831196d55d8f4115b6c5e8ec5384\" sizes=\"16x16\"/>\n    <style>\n    html\n    {\n        box-sizing: border-box;\n        overflow: -moz-scrollbars-vertical;\n        overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n        box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n    </style>\n    </head>\n\n<body >\n<div id=\"swagger-ui\"></div>\n\n<script src=\"http://localhost/docs/asset/swagger-ui-bundle.js?v=6c23777357d2beae9650f9aa035d93fb\"></script>\n<script src=\"http://localhost/docs/asset/swagger-ui-standalone-preset.js?v=6b2892eb9458da5c3224817b3984d14c\"></script>\n<script>\n    window.onload = function() {\n        // Build a system\n        const ui = SwaggerUIBundle({\n            dom_id: '#swagger-ui',\n            url: \"http://localhost/docs/api-docs.json\",\n            operationsSorter: null,\n            configUrl: null,\n            validatorUrl: null,\n            oauth2RedirectUrl: \"http://localhost/api/oauth2-callback\",\n\n            requestInterceptor: function(request) {\n                request.headers['X-CSRF-TOKEN'] = '';\n                return request;\n            },\n\n            presets: [\n                SwaggerUIBundle.presets.apis,\n                SwaggerUIStandalonePreset\n            ],\n\n            plugins: [\n                SwaggerUIBundle.plugins.DownloadUrl\n            ],\n\n            layout: \"StandaloneLayout\",\n            docExpansion : \"none\",\n            deepLinking: true,\n            filter: true,\n            persistAuthorization: \"false\",\n\n        })\n\n        window.ui = ui\n\n            }\n</script>\n</body>\n</html>\n"
      tags:
        - Endpoints
  /api/oauth2-callback:
    get:
      summary: 'Display Oauth2 callback pages.'
      operationId: displayOauth2CallbackPages
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!doctype html>\n<html lang=\"en-US\">\n<head>\n    <title>Swagger UI: OAuth2 Redirect</title>\n</head>\n<body>\n<script>\n    'use strict';\n    function run () {\n        var oauth2 = window.opener.swaggerUIRedirectOauth2;\n        var sentState = oauth2.state;\n        var redirectUrl = oauth2.redirectUrl;\n        var isValid, qp, arr;\n\n        if (/code|token|error/.test(window.location.hash)) {\n            qp = window.location.hash.substring(1).replace('?', '&');\n        } else {\n            qp = location.search.substring(1);\n        }\n\n        arr = qp.split(\"&\");\n        arr.forEach(function (v,i,_arr) { _arr[i] = '\"' + v.replace('=', '\":\"') + '\"';});\n        qp = qp ? JSON.parse('{' + arr.join() + '}',\n                function (key, value) {\n                    return key === \"\" ? value : decodeURIComponent(value);\n                }\n        ) : {};\n\n        isValid = qp.state === sentState;\n\n        if ((\n          oauth2.auth.schema.get(\"flow\") === \"accessCode\" ||\n          oauth2.auth.schema.get(\"flow\") === \"authorizationCode\" ||\n          oauth2.auth.schema.get(\"flow\") === \"authorization_code\"\n        ) && !oauth2.auth.code) {\n            if (!isValid) {\n                oauth2.errCb({\n                    authId: oauth2.auth.name,\n                    source: \"auth\",\n                    level: \"warning\",\n                    message: \"Authorization may be unsafe, passed state was changed in server. The passed state wasn't returned from auth server.\"\n                });\n            }\n\n            if (qp.code) {\n                delete oauth2.state;\n                oauth2.auth.code = qp.code;\n                oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});\n            } else {\n                let oauthErrorMsg;\n                if (qp.error) {\n                    oauthErrorMsg = \"[\"+qp.error+\"]: \" +\n                        (qp.error_description ? qp.error_description+ \". \" : \"no accessCode received from the server. \") +\n                        (qp.error_uri ? \"More info: \"+qp.error_uri : \"\");\n                }\n\n                oauth2.errCb({\n                    authId: oauth2.auth.name,\n                    source: \"auth\",\n                    level: \"error\",\n                    message: oauthErrorMsg || \"[Authorization failed]: no accessCode received from the server.\"\n                });\n            }\n        } else {\n            oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});\n        }\n        window.close();\n    }\n\n    if (document.readyState !== 'loading') {\n        run();\n    } else {\n        document.addEventListener('DOMContentLoaded', function () {\n            run();\n        });\n    }\n</script>\n</body>\n</html>\n"
      tags:
        - Endpoints
  /api/v1/user:
    get:
      summary: ''
      operationId: getApiV1User
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v1/lists/categories:
    get:
      summary: ''
      operationId: getApiV1ListsCategories
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'rerum et aut'
                    -
                      id: 2
                      name: 'pariatur doloribus dolor'
                    -
                      id: 3
                      name: 'ex id placeat'
                    -
                      id: 4
                      name: 'ratione velit suscipit'
                    -
                      id: 5
                      name: 'ipsa vel suscipit'
                    -
                      id: 6
                      name: 'recusandae fugit animi'
                    -
                      id: 7
                      name: 'quis et labore'
                    -
                      id: 8
                      name: 'magnam voluptatem aliquid'
                    -
                      id: 9
                      name: 'ullam sit exercitationem'
                    -
                      id: 10
                      name: 'harum veritatis labore'
                    -
                      id: 11
                      name: 'consequuntur quod qui'
                    -
                      id: 12
                      name: 'amet officia quo'
                    -
                      id: 13
                      name: 'quo nulla perspiciatis'
                    -
                      id: 14
                      name: 'illo quia consequatur'
                    -
                      id: 15
                      name: 'ad non aspernatur'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'rerum et aut'
                      -
                        id: 2
                        name: 'pariatur doloribus dolor'
                      -
                        id: 3
                        name: 'ex id placeat'
                      -
                        id: 4
                        name: 'ratione velit suscipit'
                      -
                        id: 5
                        name: 'ipsa vel suscipit'
                      -
                        id: 6
                        name: 'recusandae fugit animi'
                      -
                        id: 7
                        name: 'quis et labore'
                      -
                        id: 8
                        name: 'magnam voluptatem aliquid'
                      -
                        id: 9
                        name: 'ullam sit exercitationem'
                      -
                        id: 10
                        name: 'harum veritatis labore'
                      -
                        id: 11
                        name: 'consequuntur quod qui'
                      -
                        id: 12
                        name: 'amet officia quo'
                      -
                        id: 13
                        name: 'quo nulla perspiciatis'
                      -
                        id: 14
                        name: 'illo quia consequatur'
                      -
                        id: 15
                        name: 'ad non aspernatur'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'rerum et aut'
      tags:
        - Endpoints
  /api/v1/categories:
    get:
      summary: ''
      operationId: getApiV1Categories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Store a new category'
      operationId: storeANewCategory
      description: 'Creating a new category'
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the category.'
                  example: Electronics
                  nullable: false
              required:
                - name
  '/api/v1/categories/{id}':
    get:
      summary: ''
      operationId: getApiV1CategoriesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: ''
      operationId: putApiV1CategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: aliquam
                  nullable: false
              required:
                - name
    delete:
      summary: ''
      operationId: deleteApiV1CategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/products:
    get:
      summary: ''
      operationId: getApiV1Products
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v2/user:
    get:
      summary: ''
      operationId: getApiV2User
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v2/lists/categories:
    get:
      summary: ''
      operationId: getApiV2ListsCategories
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'rerum et aut'
                    -
                      id: 2
                      name: 'pariatur doloribus dolor'
                    -
                      id: 3
                      name: 'ex id placeat'
                    -
                      id: 4
                      name: 'ratione velit suscipit'
                    -
                      id: 5
                      name: 'ipsa vel suscipit'
                    -
                      id: 6
                      name: 'recusandae fugit animi'
                    -
                      id: 7
                      name: 'quis et labore'
                    -
                      id: 8
                      name: 'magnam voluptatem aliquid'
                    -
                      id: 9
                      name: 'ullam sit exercitationem'
                    -
                      id: 10
                      name: 'harum veritatis labore'
                    -
                      id: 11
                      name: 'consequuntur quod qui'
                    -
                      id: 12
                      name: 'amet officia quo'
                    -
                      id: 13
                      name: 'quo nulla perspiciatis'
                    -
                      id: 14
                      name: 'illo quia consequatur'
                    -
                      id: 15
                      name: 'ad non aspernatur'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'rerum et aut'
                      -
                        id: 2
                        name: 'pariatur doloribus dolor'
                      -
                        id: 3
                        name: 'ex id placeat'
                      -
                        id: 4
                        name: 'ratione velit suscipit'
                      -
                        id: 5
                        name: 'ipsa vel suscipit'
                      -
                        id: 6
                        name: 'recusandae fugit animi'
                      -
                        id: 7
                        name: 'quis et labore'
                      -
                        id: 8
                        name: 'magnam voluptatem aliquid'
                      -
                        id: 9
                        name: 'ullam sit exercitationem'
                      -
                        id: 10
                        name: 'harum veritatis labore'
                      -
                        id: 11
                        name: 'consequuntur quod qui'
                      -
                        id: 12
                        name: 'amet officia quo'
                      -
                        id: 13
                        name: 'quo nulla perspiciatis'
                      -
                        id: 14
                        name: 'illo quia consequatur'
                      -
                        id: 15
                        name: 'ad non aspernatur'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'rerum et aut'
      tags:
        - Endpoints
  /api/v2/categories:
    get:
      summary: ''
      operationId: getApiV2Categories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Store a new category'
      operationId: storeANewCategory
      description: 'Creating a new category'
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the category.'
                  example: Electronics
                  nullable: false
              required:
                - name
  '/api/v2/categories/{id}':
    get:
      summary: ''
      operationId: getApiV2CategoriesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: ''
      operationId: putApiV2CategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: false
              required:
                - name
    delete:
      summary: ''
      operationId: deleteApiV2CategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v2/products:
    get:
      summary: ''
      operationId: getApiV2Products
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v3/user:
    get:
      summary: ''
      operationId: getApiV3User
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v3/lists/categories:
    get:
      summary: ''
      operationId: getApiV3ListsCategories
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'rerum et aut'
                    -
                      id: 2
                      name: 'pariatur doloribus dolor'
                    -
                      id: 3
                      name: 'ex id placeat'
                    -
                      id: 4
                      name: 'ratione velit suscipit'
                    -
                      id: 5
                      name: 'ipsa vel suscipit'
                    -
                      id: 6
                      name: 'recusandae fugit animi'
                    -
                      id: 7
                      name: 'quis et labore'
                    -
                      id: 8
                      name: 'magnam voluptatem aliquid'
                    -
                      id: 9
                      name: 'ullam sit exercitationem'
                    -
                      id: 10
                      name: 'harum veritatis labore'
                    -
                      id: 11
                      name: 'consequuntur quod qui'
                    -
                      id: 12
                      name: 'amet officia quo'
                    -
                      id: 13
                      name: 'quo nulla perspiciatis'
                    -
                      id: 14
                      name: 'illo quia consequatur'
                    -
                      id: 15
                      name: 'ad non aspernatur'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'rerum et aut'
                      -
                        id: 2
                        name: 'pariatur doloribus dolor'
                      -
                        id: 3
                        name: 'ex id placeat'
                      -
                        id: 4
                        name: 'ratione velit suscipit'
                      -
                        id: 5
                        name: 'ipsa vel suscipit'
                      -
                        id: 6
                        name: 'recusandae fugit animi'
                      -
                        id: 7
                        name: 'quis et labore'
                      -
                        id: 8
                        name: 'magnam voluptatem aliquid'
                      -
                        id: 9
                        name: 'ullam sit exercitationem'
                      -
                        id: 10
                        name: 'harum veritatis labore'
                      -
                        id: 11
                        name: 'consequuntur quod qui'
                      -
                        id: 12
                        name: 'amet officia quo'
                      -
                        id: 13
                        name: 'quo nulla perspiciatis'
                      -
                        id: 14
                        name: 'illo quia consequatur'
                      -
                        id: 15
                        name: 'ad non aspernatur'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'rerum et aut'
      tags:
        - Endpoints
  /api/v3/categories:
    get:
      summary: ''
      operationId: getApiV3Categories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Store a new category'
      operationId: storeANewCategory
      description: 'Creating a new category'
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the category.'
                  example: Electronics
                  nullable: false
              required:
                - name
  '/api/v3/categories/{id}':
    get:
      summary: ''
      operationId: getApiV3CategoriesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: ''
      operationId: putApiV3CategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: et
                  nullable: false
              required:
                - name
    delete:
      summary: ''
      operationId: deleteApiV3CategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v3/products:
    get:
      summary: ''
      operationId: getApiV3Products
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiV3Products
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Nisi dolor eaque dolorum dolores.'
                  nullable: false
                price:
                  type: integer
                  description: ''
                  example: 2
                  nullable: false
              required:
                - name
                - description
                - price
  '/api/v3/products/{id}':
    put:
      summary: ''
      operationId: putApiV3ProductsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Voluptatem velit corporis maiores tempora quos autem.'
                  nullable: false
                price:
                  type: integer
                  description: ''
                  example: 3
                  nullable: false
              required:
                - name
                - description
                - price
    delete:
      summary: ''
      operationId: deleteApiV3ProductsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v3/private-subcategories:
    get:
      summary: ''
      operationId: getApiV3PrivateSubcategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v3/subcategories:
    get:
      summary: ''
      operationId: getApiV3Subcategories
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      name: 'totam illo expedita'
                      description: 'Praesentium incidunt accusamus veritatis quam laudantium quis tempore.'
                      category_name: 'rerum et aut'
                    -
                      name: 'aliquid ab quos'
                      description: 'Ut neque dolore quo dolorem incidunt molestiae.'
                      category_name: 'rerum et aut'
                    -
                      name: 'dolores veritatis laudantium'
                      description: 'Iure exercitationem voluptas fuga quas consequuntur voluptatem.'
                      category_name: 'rerum et aut'
                    -
                      name: 'eos provident illum'
                      description: 'Error officia id placeat vitae temporibus error totam.'
                      category_name: 'rerum et aut'
                    -
                      name: 'quia laborum ab'
                      description: 'Cumque corporis dolor eum quas.'
                      category_name: 'rerum et aut'
                    -
                      name: 'itaque aut consequuntur'
                      description: 'Itaque alias temporibus et ut molestiae aut est.'
                      category_name: 'pariatur doloribus dolor'
                    -
                      name: 'quaerat accusamus aut'
                      description: 'Consequatur expedita vel quo nobis molestias dicta.'
                      category_name: 'pariatur doloribus dolor'
                    -
                      name: 'autem et eius'
                      description: 'Nemo voluptas eius dolorem sed dolores beatae totam.'
                      category_name: 'pariatur doloribus dolor'
                    -
                      name: 'dolorem eius beatae'
                      description: 'Maiores modi eos non maxime debitis similique ut.'
                      category_name: 'pariatur doloribus dolor'
                    -
                      name: 'laboriosam excepturi voluptates'
                      description: 'Repellendus sed quaerat eum veritatis dolor.'
                      category_name: 'pariatur doloribus dolor'
                  first_page_url: 'http://localhost/api/v3/subcategories?page=1'
                  from: 1
                  last_page: 8
                  last_page_url: 'http://localhost/api/v3/subcategories?page=8'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://localhost/api/v3/subcategories?page=1'
                      label: '1'
                      active: true
                    -
                      url: 'http://localhost/api/v3/subcategories?page=2'
                      label: '2'
                      active: false
                    -
                      url: 'http://localhost/api/v3/subcategories?page=3'
                      label: '3'
                      active: false
                    -
                      url: 'http://localhost/api/v3/subcategories?page=4'
                      label: '4'
                      active: false
                    -
                      url: 'http://localhost/api/v3/subcategories?page=5'
                      label: '5'
                      active: false
                    -
                      url: 'http://localhost/api/v3/subcategories?page=6'
                      label: '6'
                      active: false
                    -
                      url: 'http://localhost/api/v3/subcategories?page=7'
                      label: '7'
                      active: false
                    -
                      url: 'http://localhost/api/v3/subcategories?page=8'
                      label: '8'
                      active: false
                    -
                      url: 'http://localhost/api/v3/subcategories?page=2'
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: 'http://localhost/api/v3/subcategories?page=2'
                  path: 'http://localhost/api/v3/subcategories'
                  per_page: 10
                  prev_page_url: null
                  to: 10
                  total: 75
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        name: 'totam illo expedita'
                        description: 'Praesentium incidunt accusamus veritatis quam laudantium quis tempore.'
                        category_name: 'rerum et aut'
                      -
                        name: 'aliquid ab quos'
                        description: 'Ut neque dolore quo dolorem incidunt molestiae.'
                        category_name: 'rerum et aut'
                      -
                        name: 'dolores veritatis laudantium'
                        description: 'Iure exercitationem voluptas fuga quas consequuntur voluptatem.'
                        category_name: 'rerum et aut'
                      -
                        name: 'eos provident illum'
                        description: 'Error officia id placeat vitae temporibus error totam.'
                        category_name: 'rerum et aut'
                      -
                        name: 'quia laborum ab'
                        description: 'Cumque corporis dolor eum quas.'
                        category_name: 'rerum et aut'
                      -
                        name: 'itaque aut consequuntur'
                        description: 'Itaque alias temporibus et ut molestiae aut est.'
                        category_name: 'pariatur doloribus dolor'
                      -
                        name: 'quaerat accusamus aut'
                        description: 'Consequatur expedita vel quo nobis molestias dicta.'
                        category_name: 'pariatur doloribus dolor'
                      -
                        name: 'autem et eius'
                        description: 'Nemo voluptas eius dolorem sed dolores beatae totam.'
                        category_name: 'pariatur doloribus dolor'
                      -
                        name: 'dolorem eius beatae'
                        description: 'Maiores modi eos non maxime debitis similique ut.'
                        category_name: 'pariatur doloribus dolor'
                      -
                        name: 'laboriosam excepturi voluptates'
                        description: 'Repellendus sed quaerat eum veritatis dolor.'
                        category_name: 'pariatur doloribus dolor'
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: 'totam illo expedita'
                        description:
                          type: string
                          example: 'Praesentium incidunt accusamus veritatis quam laudantium quis tempore.'
                        category_name:
                          type: string
                          example: 'rerum et aut'
                  first_page_url:
                    type: string
                    example: 'http://localhost/api/v3/subcategories?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 8
                  last_page_url:
                    type: string
                    example: 'http://localhost/api/v3/subcategories?page=8'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v3/subcategories?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://localhost/api/v3/subcategories?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://localhost/api/v3/subcategories?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://localhost/api/v3/subcategories?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://localhost/api/v3/subcategories?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://localhost/api/v3/subcategories?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://localhost/api/v3/subcategories?page=7'
                        label: '7'
                        active: false
                      -
                        url: 'http://localhost/api/v3/subcategories?page=8'
                        label: '8'
                        active: false
                      -
                        url: 'http://localhost/api/v3/subcategories?page=2'
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: 'http://localhost/api/v3/subcategories?page=2'
                  path:
                    type: string
                    example: 'http://localhost/api/v3/subcategories'
                  per_page:
                    type: integer
                    example: 10
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 10
                  total:
                    type: integer
                    example: 75
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiV3Subcategories
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  '/api/v3/subcategories/{id}':
    put:
      summary: ''
      operationId: putApiV3SubcategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    delete:
      summary: ''
      operationId: deleteApiV3SubcategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the subcategory.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
